extends ../layout

block content
  .spot-detail(style="max-width: 800px; margin: 0 auto;")
    // Spot information section
    .spot-info(style="margin-bottom: 30px;")
      h2= spot.title

      .spot-metadata(style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;")
        span.category(style=`display: inline-block; padding: 4px 8px; border-radius: 4px; background-color: ${
          spot.category === 'good-place' ? '#48bb78' : 
          spot.category === 'alert' ? '#f56565' : 
          spot.category === 'event' ? '#4299e1' : 
          '#718096'
        }; color: white;`)= spot.category.charAt(0).toUpperCase() + spot.category.slice(1).replace('-', ' ')

        if spot.updatedAt
          span.date(style="color: #718096; font-size: 0.9em;") Mis à jour le #{new Date(spot.updatedAt).toLocaleDateString()}

      // Author information - new section
      .author-info(style="display: flex; align-items: center; gap: 10px; margin: 10px 0; padding: 10px; background-color: rgba(255,255,255,0.05); border-radius: 8px;")
        if spot.author && spot.author.photoURL
          img.author-avatar(src=spot.author.photoURL alt="Avatar" style="width: 40px; height: 40px; border-radius: 50%;")
        else
          .author-avatar-placeholder(style="width: 40px; height: 40px; border-radius: 50%; background-color: #4a5568; display: flex; align-items: center; justify-content: center;")
            span(style="color: white; font-weight: bold;")= spot.author && spot.author.name ? spot.author.name.charAt(0).toUpperCase() : '?'
        
        .author-details
          p(style="margin: 0; font-weight: bold;") Ajouté par: 
            if spot.author
              span= spot.author.name || 'Utilisateur anonyme'
            else
              span Utilisateur inconnu
          if spot.author && spot.author.email
            p(style="margin: 0; font-size: 0.85em; color: #718096;")= spot.author.email

      .description
        p= spot.description

      .coordinates(style="margin: 15px 0; color: #718096;")
        p 
          strong Coordonnées: 
          | Longitude: #{spot.coords.coordinates[0].toFixed(6)}, Latitude: #{spot.coords.coordinates[1].toFixed(6)}

    // Map section
    .map-section
      h3 Localisation sur la carte

      #spot-map(style="height: 400px; margin-bottom: 20px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);")

    // Actions section
    .actions(style="display: flex; gap: 15px; margin-top: 25px;")
      a.back-button(href="/spots" style="padding: 8px 15px; background-color: #718096; color: white; text-decoration: none; border-radius: 4px;") Retour à la liste

      if spot.category === 'alert'
        a.alerts-button(href=`/alerts?spotId=${spot._id}`, style="padding: 8px 15px; background-color: #f56565; color: white; text-decoration: none; border-radius: 4px;") Voir les alertes

      a.view-on-map-button(href=`/map#spot=${spot._id}`, style="padding: 8px 15px; background-color: #4299e1; color: white; text-decoration: none; border-radius: 4px;") Voir sur la carte principale
      
      // Edit and delete buttons (only shown to author)
      if isAuthor
        a.edit-button(href=`/spots/${spot._id}/edit`, style="padding: 8px 15px; background-color: #ed8936; color: white; text-decoration: none; border-radius: 4px;") Modifier
        button.delete-button(data-id=spot._id, style="padding: 8px 15px; background-color: #e53e3e; color: white; border: none; border-radius: 4px; cursor: pointer;") Supprimer

  script.
    // Initialize the spot map
    document.addEventListener('DOMContentLoaded', function() {
      // Get coordinates from the spot data (GeoJSON format [lng, lat])
      const lng = #{spot.coords.coordinates[0]};
      const lat = #{spot.coords.coordinates[1]};
      const spotTitle = "#{spot.title}";
      const spotCategory = "#{spot.category}";

      // Initialize map centered on the spot location
      const map = L.map('spot-map').setView([lat, lng], 15);

      // Add OpenStreetMap tiles
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      }).addTo(map);

      // Custom icon based on category
      const iconUrl = spotCategory === 'good-place' ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png' :
        spotCategory === 'alert' ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png' :
        spotCategory === 'event' ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png' :
        'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png';

      const icon = L.icon({
        iconUrl: iconUrl,
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
        shadowSize: [41, 41]
      });

      L.marker([lat, lng], { icon: icon })
        .addTo(map)
        .bindPopup(`<strong>${spotTitle}</strong><br>Catégorie: ${spotCategory}`);

      // Handle delete button if present
      const deleteButton = document.querySelector('.delete-button');
      if (deleteButton) {
        deleteButton.addEventListener('click', function() {
          if (confirm('Êtes-vous sûr de vouloir supprimer ce spot ? Cette action est irréversible.')) {
            const spotId = this.dataset.id;
            
            // Use the auth token if available
            const headers = { 'Content-Type': 'application/json' };
            const token = localStorage.getItem('authToken');
            if (token) {
              headers['Authorization'] = `Bearer ${token}`;
            }
            
            fetch(`/api/spots/${spotId}`, {
              method: 'DELETE',
              headers: headers
            })
            .then(response => {
              if (response.ok) {
                window.location.href = '/spots';
              } else {
                throw new Error('Failed to delete spot');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('An error occurred while trying to delete the spot.');
            });
          }
        });
      }
    });