extends ../layout

block content
  h2= title

  .chart-container
    canvas#alertTypeChart

  h3 Alertes récentes

  table.alerts-table
    thead
      tr
        th Type
        th Lieu
        th Sévérité
        th Date

    tbody
      each alert in recentAlerts
        tr
          td= alert.alertType
          td
            if alert.spotId
              a(href=`/spots/${alert.spotId._id}`)= alert.spotId.title
            else
              span Lieu inconnu
          td
            span(class=`severity severity-${alert.severity}`)= alert.severity
          td= alert.timestamp.toLocaleString()

  script(src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js")
  script.
    (() => {
      const alertTypesData = !{alertTypesData};

      const labels = alertTypesData.map(type => type._id);
      const counts = alertTypesData.map(type => type.count);

      const colors = {
        traffic: 'rgba(255, 99, 132, 0.7)',
        weather: 'rgba(54, 162, 235, 0.7)',
        safety: 'rgba(255, 206, 86, 0.7)',
        event: 'rgba(75, 192, 192, 0.7)',
        other: 'rgba(153, 102, 255, 0.7)'
      };

      const ctx = document.getElementById('alertTypeChart').getContext('2d');
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels,
          datasets: [{
            label: 'Nombre d\'alertes par type',
            data: counts,
            backgroundColor: labels.map(label => colors[label] || colors.other),
            borderColor: labels.map(label => colors[label]?.replace('0.7', '1') || colors.other.replace('0.7', '1')),
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              ticks: { precision: 0 }
            }
          }
        }
      });
    })();
